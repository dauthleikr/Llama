import("user32.dll") void MessageBoxA(int hwnd, cstr title, cstr text, int type)

void main()
{

	printWithBool(intToCstr(9001), true);
	printWithBool(intToCstr(0), true);
	comparisonChecks();
}

void printWithBool(cstr text, bool truth)
{
	if (truth)
		MessageBoxA(0, "True", text, 0);
	else
		MessageBoxA(0, "False", text, 0);
}

void comparisonChecks()
{
	printWithBool("3.2 > 2.9", 3.2 > 2.9);
	printWithBool("2.9 > 3.2", 2.9 > 3.2);

	printWithBool("1.2 < 2.9", 1.2 < 2.9);
	printWithBool("9.2 < 2.9", 9.2 < 2.9);

	printWithBool("1 < 2", 1 < 2);
	printWithBool("2 < 2", 2 < 2);
	printWithBool("2 < 1", 2 < 1);

	printWithBool("1 <= 2", 1 <= 2);
	printWithBool("2 <= 2", 2 <= 2);
	printWithBool("2 <= 1", 2 <= 1);

	printWithBool("1 > 2", 1 > 2);
	printWithBool("1 > 1", 1 > 1);
	printWithBool("2 > 1", 2 > 1);

	printWithBool("1 >= 1", 1 >= 1);
	printWithBool("0 >= 1", 0 >= 1);
	printWithBool("2 >= 1", 2 >= 1);

	printWithBool("2 == 2", 2 == 2);
	printWithBool("1 == 2", 1 == 2);
	printWithBool("3 == 2", 3 == 2);

	printWithBool("2 != 2", 2 != 2);
	printWithBool("2 != 3", 2 != 3);
	printWithBool("3 != 2", 3 != 2);
}

void printDigit(int digit)
{
	byte[] msg = new byte(2);
	msg[1] = <byte>0;
	msg[0] = <byte>(48 + digit);
	MessageBoxA(0, <cstr><byte*>msg, "", 1);
}

cstr intToCstr(long value)
{
	if (value == 0)
	{
		byte[] zeroChars = new byte(2);
		zeroChars[0] = <byte>48;
		return <cstr><byte*>zeroChars;
	}

	int digits = 0;
	if (value < 0)
		digits = 1;

	long valueCopy = value;
	while(valueCopy != 0)
	{
		valueCopy = valueCopy / 10;
		digits = digits + 1;
	}

	byte[] digitChars = new byte(digits + 1);
	if (value < 0)
		digitChars[0] = <byte>45;

	value = abs(value);
	for (int i = 0; value != 0; i = i + 1)
	{
		digitChars[digits - (i + 1)] = <byte>(48 + value % 10);
		value = value / 10;
	}
	return <cstr><byte*>digitChars;
}

long abs(long value)
{
	if (value < 0)
		return -value;
	return value;
}

int strlen(cstr str)
{
	for (int i = 0; true; i = i + 1)
		if (str[i] == 0)
			return i + 1;
}